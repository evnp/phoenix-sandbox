# Minimal Working Temple<>LiveComponent Example

```elixir
Mix.install([
  {:phoenix, "~> 1.7.14"},
  {:phoenix_playground, "~> 0.1.6"},
  {:temple, "~> 0.14.0"},
], [
  config: [
    temple: [
      engine: Phoenix.LiveView.Engine
    ]
  ]
])
```

## Section

```elixir
defmodule DemoLive.Components.TestLiveComponent do
  use Phoenix.LiveComponent
  
  import Temple
  import Phoenix.LiveView.TagEngine, only: [component: 3, inner_block: 2]

  def render(assigns) do
    temple do
      div do: "TEST LIVE COMPONENT CONTENT"
    end
  end
end

defmodule DemoLive do
  use Phoenix.LiveView

  import Temple
  import Phoenix.LiveView.TagEngine, only: [component: 3, inner_block: 2]

  def mount(_params, _session, socket) do
    {:ok, assign(socket, count: 0)}
  end

  def render(assigns) do
    temple do      
      span do: @count
      button "phx-click": "inc", do: "+"
      button "phx-click": "dec", do: "-"
      c &live_component/1,
        id: "test-live-component",
        module: DemoLive.Components.TestLiveComponent
    end
  end

  def handle_event("inc", _params, socket) do
    {:noreply, assign(socket, count: socket.assigns.count + 1)}
  end

  def handle_event("dec", _params, socket) do
    {:noreply, assign(socket, count: socket.assigns.count - 1)}
  end
end

PhoenixPlayground.start(live: DemoLive)
```
